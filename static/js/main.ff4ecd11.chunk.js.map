{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.module.css","Components/App.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","initialState","number","name","ContactForm","state","handlerInput","target","value","setState","submitHandler","e","preventDefault","singleContact","props","addContact","this","className","styles","onSubmit","titleLabel","inputForm","type","placeholder","onChange","formButton","Component","Filter","filter","filterHandler","wrapperSearch","filterLabel_span","filterInput","ContactItem","id","removeContact","contactItem","paragraph","removeBtn","onClick","App","contacts","start","alert","contactObj","some","el","prev","uuidv4","filterContacts","contact","toLowerCase","includes","deleteAlert","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","stylesApp","wrapper","CSSTransition","classNames","enterActive","alertBoxEnterActive","exitActive","alertBoxExitActive","mountOnEnter","unmountOnExit","timeout","in","alertBox","alertBtn","titleEnterActive","title","TransitionGroup","contactsList","component","map","listItemEnterActive","listItemExitActive","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff4ecd11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\",\"filterLabel_span\":\"Filter_filterLabel_span__oJAe_\",\"wrapperSearch\":\"Filter_wrapperSearch__3WE7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__D_wUJ\",\"listItemEnterActive\":\"ContactItem_listItemEnterActive__28bVf\",\"task\":\"ContactItem_task__20LfY\",\"listItemExitActive\":\"ContactItem_listItemExitActive__1wZ3F\",\"hinge\":\"ContactItem_hinge__m3PqO\",\"removeBtn\":\"ContactItem_removeBtn__29UAM\",\"paragraph\":\"ContactItem_paragraph__1OKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3tY0G\",\"formButton\":\"App_formButton__2c67t\",\"title\":\"App_title__3V7C6\",\"titleEnterActive\":\"App_titleEnterActive__3N9_4\",\"task\":\"App_task__27kAO\",\"contactsList\":\"App_contactsList__2K84T\",\"alertBox\":\"App_alertBox__1Gmo0\",\"alertBoxEnterActive\":\"App_alertBoxEnterActive__3Ldyv\",\"alertBoxExitActive\":\"App_alertBoxExitActive__1s6lO\",\"hinge\":\"App_hinge__Gxptf\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport PropTypes from \"prop-types\";\n\nconst initialState = {\n  number: \"\",\n  name: \"\",\n}\n\nclass ContactForm extends Component {\n\n  state = {\n    number: \"\",\n    name: \"\",\n  }\n\n  handlerInput = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  submitHandler = (e) => {\n    const { name, number } = this.state\n    e.preventDefault();\n    const singleContact = {\n      name,\n      number,\n\n    }\n    this.props.addContact(singleContact)\n    this.setState({ ...initialState })\n  }\n\n  render() {\n    const { number, name } = this.state\n    return (\n      <form className={styles.ContactForm} onSubmit={this.submitHandler}>\n        <label>\n          <span className={styles.titleLabel}>Name</span>\n          <input\n            className={styles.inputForm}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            placeholder=\"Name\"\n            onChange={this.handlerInput}\n          />\n        </label>\n        <label>\n          <span className={styles.titleLabel}> Number</span>\n          <input\n            className={styles.inputForm}\n            type=\"text\"\n            value={number}\n            name=\"number\"\n            placeholder=\"Number\"\n            onChange={this.handlerInput}\n          />\n        </label>\n        <button className={styles.formButton} type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  addContact: PropTypes.func.isRequired\n}","import React, { Component } from 'react';\nimport styles from './Filter.module.css'\nimport PropTypes from \"prop-types\";\n\nclass Filter extends Component {\n  render() {\n    const { filter, filterHandler } = this.props\n    return (\n      <>\n        <div className={styles.wrapperSearch}>\n          <label>\n            <span className={styles.filterLabel_span}> Find contacts by name</span>\n            <input\n              className={styles.filterInput}\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={filterHandler}\n              placeholder=\"Search\"\n            />\n          </label>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired\n}","import React from 'react';\nimport styles from './ContactItem.module.css'\nimport PropTypes from \"prop-types\";\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nconst ContactItem = ({ id, name, number, removeContact }) => {\n  return (\n    <li className={styles.contactItem}>\n      <p className={styles.paragraph}>{name}: {number}</p>\n      <button\n        className={styles.removeBtn}\n        type=\"button\"\n        onClick={(e) => {\n          removeContact(id);\n        }}>\n        X\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  removeContact: PropTypes.func.isRequired\n}","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport stylesApp from './App.module.css';\nimport styles from './ContactItem/ContactItem.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactItem from '../Components/ContactItem/ContactItem';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    start: false,\n    alert: false\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      })\n    }\n    this.setState({ start: true })\n  }\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n\n  addContact = (contactObj) => {\n    if (this.state.contacts.some(el => el.name === contactObj.name)) {\n      // alert(`${contactObj.name} is already contacts`);\n      this.setState({ alert: true })\n      return;\n    }\n\n    this.setState((prev) => ({\n      contacts: [{ ...contactObj, id: uuidv4() }, ...prev.contacts]\n    }));\n\n  };\n\n  removeContact = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter(el => el.id !== id)\n    }));\n  }\n\n  filterHandler = (e) => {\n    this.setState({ filter: e.target.value });\n  }\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  deleteAlert = () => {\n    this.setState({ alert: false })\n  }\n\n  render() {\n    const { contacts, filter, start, alert } = this.state;\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <div className={stylesApp.wrapper}>\n        <CSSTransition classNames={{\n          enterActive: stylesApp.alertBoxEnterActive,\n          exitActive: stylesApp.alertBoxExitActive\n        }}\n          mountOnEnter\n          unmountOnExit\n          timeout={300}\n          in={alert}>\n          <div className={stylesApp.alertBox}>\n            <h2>{`The name is already a contact`}</h2>\n            <button\n              onClick={this.deleteAlert}\n              className={styles.alertBtn}\n              type=\"button\"\n            >X\n              </button>\n          </div>\n        </CSSTransition>\n        <CSSTransition classNames={{\n          enterActive: stylesApp.titleEnterActive,\n        }} timeout={800} in={start}>\n          <h2 className={stylesApp.title}>Phonebook </h2>\n        </CSSTransition>\n\n\n        <ContactForm contacts={contacts} addContact={this.addContact} />\n        <Filter filter={filter} filterHandler={this.filterHandler} />\n\n        <TransitionGroup className={stylesApp.contactsList} component=\"ul\">\n          {filteredContacts.map(contact =>\n            <CSSTransition\n              key={contact.id}\n              timeout={800}\n              classNames={{\n                enterActive: styles.listItemEnterActive,\n                exitActive: styles.listItemExitActive,\n              }}\n            >\n              <ContactItem {...contact} removeContact={this.removeContact} />\n            </CSSTransition>\n          )}\n\n        </TransitionGroup>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__212Qj\",\"titleLabel\":\"ContactForm_titleLabel__2badp\",\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"formButton\":\"ContactForm_formButton__fthjp\"};"],"sourceRoot":""}